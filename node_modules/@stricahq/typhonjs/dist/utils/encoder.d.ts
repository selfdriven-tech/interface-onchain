import * as cbors from "@stricahq/cbors";
import { PlutusData, CollateralInput, LanguageView, AuxiliaryData, Certificate, Input, Metadata, Output, StakeDelegationCertificate, StakeDeRegistrationCertificate, StakeRegistrationCertificate, Token, VKeyWitness, Withdrawal, PlutusScriptType, NativeScript, Mint, ReferenceInput } from "../types";
import { EncodedCertificate, EncodedCollateralInput, EncodedPlutusData, EncodedInput, EncodedOutput, EncodedStakeDelegationCertificate, EncodedStakeDeRegistrationCertificate, EncodedStakeRegistrationCertificate, EncodedTokens, EncodedVKeyWitness, EncodedWithdrawals, EncodedWitnesses, EncodedNativeScript } from "../internal-types";
export declare const encodeInputs: (inputs: Array<Input | ReferenceInput>) => Array<EncodedInput>;
export declare const encodeCollaterals: (collaterals: Array<CollateralInput>) => Array<EncodedCollateralInput>;
export declare const encodeOutputTokens: (tokens: Array<Token>) => EncodedTokens;
export declare const encodeMint: (mints: Array<Mint>) => EncodedTokens;
export declare const encodeOutput: (output: Output) => EncodedOutput;
export declare const encodeOutputs: (outputs: Array<Output>) => Array<EncodedOutput>;
export declare const encodeWithdrawals: (withdrawals: Withdrawal[]) => EncodedWithdrawals;
export declare const encodeStakeRegistrationCertificate: (certificate: StakeRegistrationCertificate) => EncodedStakeRegistrationCertificate;
export declare const encodeStakeDeRegistrationCertificate: (certificate: StakeDeRegistrationCertificate) => EncodedStakeDeRegistrationCertificate;
export declare const encodeStakeDelegationCertificate: (certificate: StakeDelegationCertificate) => EncodedStakeDelegationCertificate;
export declare const encodeCertificates: (certificates: Array<Certificate>) => Array<EncodedCertificate>;
export declare const encodeVKeyWitness: (vKeyWitness: Array<VKeyWitness>) => Array<EncodedVKeyWitness>;
export declare const encodeWitnesses: (vKeyWitness: Array<VKeyWitness>, inputs: Array<Input>, plutusDataList: Array<PlutusData>, plutusScriptMap: Map<string, PlutusScriptType>, nativeScripts: Array<NativeScript>, mints: Array<Mint>) => EncodedWitnesses;
export declare const encodeMetadata: (metadataArray: Array<Metadata>) => Map<number, unknown>;
export declare const encodeAuxiliaryData: (auxiliaryData: AuxiliaryData) => cbors.CborTag;
export declare const encodePlutusData: (plutusData: PlutusData) => EncodedPlutusData;
export declare const encodeLanguageViews: (languageView: LanguageView, plutusV1: boolean, plutusV2: boolean) => string;
export declare const encodeNativeScript: (nativeScript: any) => EncodedNativeScript;
