/// <reference types="pouchdb-core" />
/// <reference types="node" />
import { BIP32Path } from './types.js';
import { Bip32PrivateKeyHex, Bip32PublicKeyHex, Ed25519KeyHashHex, Ed25519PrivateExtendedKeyHex, Ed25519PrivateNormalKeyHex, Ed25519PublicKeyHex, Ed25519SignatureHex } from './hexTypes.js';
import { HexBlob } from '@cardano-sdk/util';
export interface Bip32Ed25519 {
    fromBip39Entropy(entropy: Buffer, passphrase: string): Bip32PrivateKeyHex;
    getPublicKey(privateKey: Ed25519PrivateExtendedKeyHex | Ed25519PrivateNormalKeyHex): Ed25519PublicKeyHex;
    getPubKeyHash(publicKey: Ed25519PublicKeyHex): Ed25519KeyHashHex;
    getRawPrivateKey(bip32PrivateKey: Bip32PrivateKeyHex): Ed25519PrivateExtendedKeyHex;
    getRawPublicKey(bip32PublicKey: Bip32PublicKeyHex): Ed25519PublicKeyHex;
    getBip32PublicKey(privateKey: Bip32PrivateKeyHex): Bip32PublicKeyHex;
    derivePrivateKey(parentKey: Bip32PrivateKeyHex, derivationIndices: BIP32Path): Bip32PrivateKeyHex;
    derivePublicKey(parentKey: Bip32PublicKeyHex, derivationIndices: BIP32Path): Bip32PublicKeyHex;
    sign(privateKey: Ed25519PrivateExtendedKeyHex | Ed25519PrivateNormalKeyHex, message: HexBlob): Ed25519SignatureHex;
    verify(signature: Ed25519SignatureHex, message: HexBlob, publicKey: Ed25519PublicKeyHex): boolean;
}
//# sourceMappingURL=Bip32Ed25519.d.ts.map