/*
	Create metadata and transaction data 
    Based on JSON data - ie from entityos/entityos
*/

var entityos = require('entityos');
var _ = require('lodash')

module.exports =
{
	VERSION: '0.0.1',

	init: function (param)
	{
		// CLI Transaction Generation

        entityos.add(
		{
			name: 'onchain-cli-transaction-create',
			code: function ()
			{
				entityos.invoke('onchain-cli-transaction-create-metadata');   
			}	
		});		

		entityos.add(
		{
			name: 'onchain-cli-transaction-create-metadata',
			code: function ()
			{
                var event = entityos.get({scope: '_event'});

                console.log(event);

                if (event.sourceDataFileName != undefined)
                {
                    entityos.invoke('util-get-from-file',
                    {
                        filename: event.sourceDataFileName,
                        onComplete: 'onchain-cli-transaction-create-metadata-process'
                    })
                }
            }	
		});		

        entityos.add(
        {
            name: 'onchain-cli-transaction-create-metadata-process',
            code: function (param)
            {
                var event = entityos.get({scope: '_event'});

                event.fileData = entityos._util.param.get(param, 'fileData').value;

                if (event.notesPrefix == undefined)
                {
                    event.notesPrefix = '';
                }

                //var sourceData = event.fileData.selfdriven.skills[event.sourceNamespace];

                var sourceData = entityos.invoke('util-as-object',
                {
                    rootObject: event.fileData,
                    reference: event.sourceNamespace
                });

                var metadata = {};
                metadata[event.metadataLabel] = {}
                metadata[event.metadataLabel][event.policyID] = {};
                metadata[event.metadataLabel][event.policyID][event.tokenID] = {};
                
                var _metadata = metadata[event.metadataLabel][event.policyID][event.tokenID];

                _.each(sourceData, function (_sourceData, sd)
                {
                    if (sd >= event.sourceDataIndexStart && sd <= event.sourceDataIndexEnd)
                    {
                        _sourceData._sdi = entityos.invoke('util-text-replace-all', 
                        {
                            text: _sourceData.sdi,
                            replaceText: '-',
                            withText: ''
                        });

                        _sourceData._assetName =  entityos.invoke('util-text-to-hex',
                        {
                            text: _sourceData._sdi
                        });

                        _metadata[_sourceData._sdi] = 
                        {
                            "zone": "shared",
                            "type": {
                                "sdi": event.typeSDI,
                                "name": 'type'
                            },
                            "sdi": _sourceData.sdi,
                            "identifiers": {
                                "name": _sourceData.name,
                                "code": _sourceData.code,
                                "assetname": _sourceData._assetName
                            },
                            "description": _sourceData.name,
                            "notes": event.notesPrefix + _sourceData.name,
                            "url": [
                                "https://",
                                "selfdriven.foundation/",
                                "tokens/",
                                "{sdi}"
                            ]
                        }
                    }
                });

                event.metadataFilename = event.sourceDataFileName.replace('.json', '-metadata-' + event.sourceDataIndexStart + '-' + event.sourceDataIndexEnd + '.json');

                entityos.invoke('util-save-to-file',
                {
                    fileData: metadata,
                    saveAsJSON: true,
                    filename: event.metadataFilename,
                    onComplete: 'onchain-cli-transaction-create-unsigned'
                });
            }
        });

        entityos.add(
        {
            name: 'onchain-cli-transaction-create-unsigned',
            code: function (param)
            {
                var event = entityos.get({scope: '_event'});

                var sourceData = entityos.invoke('util-as-object',
                {
                    rootObject: event.fileData,
                    reference: event.sourceNamespace
                });


                event.transactionUnsignedFilename = event.sourceDataFileName.replace('.json', '-transaction-unsigned-' + event.sourceDataIndexStart + '-' + event.sourceDataIndexEnd + '.script');

                if (event.feeLovelace == undefined)
                {
                    event.feeLovelace = 1400000
                }

                var assets = []

                _.each(sourceData, function (_sourceData, sd)
                {
                    if (sd >= event.sourceDataIndexStart && sd <= event.sourceDataIndexEnd)
                    {
                        assets.push('"1 ' + event.policyID + '.' + _sourceData._assetName + '"')
                    }
                })

                var transactionAssets = assets.join('+');

                var transactionPreparation = 
                [
                    'cardano-cli query utxo --address ' + event.address + ' --mainnet',
                    '[Use result to set txIn: in the event file]'
                ]

                var transaction =
                [
                    'cardano-cli transaction build \\',
                    '--mainnet \\',
                    '--alonzo-era \\',
                    '--tx-in ' + event.txIn + ' \\',
                    '--tx-out ' + event.address + '+' + event.feeLovelace + '+' + transactionAssets + ' \\',
                    '--change-address ' + event.address + ' \\',
                    '--mint=' + transactionAssets + ' \\',
                    '--minting-script-file ' + event.mintingScript + ' \\',
                    '--metadata-json-file ' + event.metadataFilename + ' \\',
                    '--witness-override 2 \\',
                    '--out-file ' + event.transactionUnsignedFilename
                ];

                var transactionFileData = transactionPreparation.join('\n') + '\n\n' + transaction.join('\n');
  
                entityos.invoke('util-save-to-file',
                {
                    fileData: transactionFileData,
                    saveAsJSON: false,
                    filename: event.transactionUnsignedFilename,
                    onComplete: 'onchain-cli-transaction-create-html'
                });
            
                //entityos.invoke('util-end', event)
            }
        });


        entityos.add(
        {
            name: 'onchain-cli-transaction-create-html',
            code: function (param)
            {
                var event = entityos.get({scope: '_event'});

                var sourceData = entityos.invoke('util-as-object',
                {
                    rootObject: event.fileData,
                    reference: event.sourceNamespace
                });

                event.transactionHTMLFilename = event.sourceDataFileName.replace('.json', '-transaction-html-' + event.sourceDataIndexStart + '-' + event.sourceDataIndexEnd + '.html');

                var tableHTML = [' <table class="table table-hover"><thead><tr><th><h3 class="mb-0">Code</h3></th><th><h3 class="mb-0">Name</h3></th><th><h3 class="mb-0">SDI</h3></th></tr></thead><tbody>'];
                var divHTML = [];

                _.each(sourceData, function (_sourceData, sd)
                {
                    if (sd >= event.sourceDataIndexStart && sd <= event.sourceDataIndexEnd)
                    {
                        tableHTML.push('<tr><td>' + _sourceData.code + '</td><td>' + _sourceData.name + '</td><td>' + _sourceData.sdi + '</td></tr>');
                        divHTML.push('<div class="row border-bottom border-gray-300 pt-2 pb-2"><div class="col-2">' + _sourceData.code + '</div><div class="col-4">' + _sourceData.name + '</div><div class="col-6">' + _sourceData.sdi + '</div></div>')
                    }
                })

                tableHTML.push('</tbody></table>');

                //var htmlFileData = tableHTML.join('\n');
                var htmlFileData = divHTML.join('\n');
    
                entityos.invoke('util-save-to-file',
                {
                    fileData: htmlFileData,
                    saveAsJSON: false,
                    filename: event.transactionHTMLFilename,
                    onComplete: 'util-end'
                });
            
                //entityos.invoke('util-end', event)
            }
        });
	}
}